<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.domain.User">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="countryCode" jdbcType="VARCHAR" property="countrycode" />
    <result column="telPhone" jdbcType="VARCHAR" property="telphone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="nickName" jdbcType="VARCHAR" property="nickname" />
    <result column="statuCode" jdbcType="VARCHAR" property="statucode" />
    <result column="levelCode" jdbcType="VARCHAR" property="levelcode" />
    <result column="createDate" jdbcType="TIMESTAMP" property="createdate" />
    <result column="expireDate" jdbcType="TIMESTAMP" property="expiredate" />
  </resultMap>
  <sql id="BaseSql">
    id, username, `password`, sex, age, countryCode, telPhone, email, nickName,
    statuCode, levelCode, createDate, expireDate
  </sql>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <select id="login" parameterType="com.example.demo.domain.LoginUser" resultMap="BaseResultMap">
    select
    <include refid="BaseSql"/>
    from user
    where username = #{username}
    and password = #{password}
  </select>
  <insert id="insert" parameterType="com.example.demo.domain.User">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user (username, `password`, sex, 
      age, countryCode, telPhone, 
      email, nickName, statuCode, 
      levelCode, createDate, expireDate
      )
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, 
      #{age,jdbcType=INTEGER}, #{countrycode,jdbcType=VARCHAR}, #{telphone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, #{statucode,jdbcType=VARCHAR}, 
      #{levelcode,jdbcType=VARCHAR}, #{createdate,jdbcType=TIMESTAMP}, #{expiredate,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.domain.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      age = #{age,jdbcType=INTEGER},
      countryCode = #{countrycode,jdbcType=VARCHAR},
      telPhone = #{telphone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      nickName = #{nickname,jdbcType=VARCHAR},
      statuCode = #{statucode,jdbcType=VARCHAR},
      levelCode = #{levelcode,jdbcType=VARCHAR},
      createDate = #{createdate,jdbcType=TIMESTAMP},
      expireDate = #{expiredate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select id, username, `password`, sex, age, countryCode, telPhone, email, nickName, 
    statuCode, levelCode, createDate, expireDate
    from user
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, username, `password`, sex, age, countryCode, telPhone, email, nickName, 
    statuCode, levelCode, createDate, expireDate
    from user
  </select>
</mapper>